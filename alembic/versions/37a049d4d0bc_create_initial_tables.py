"""create initial tables

Revision ID: 37a049d4d0bc
Revises: 
Create Date: 2025-04-11 22:48:08.688794

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '37a049d4d0bc'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user_users',
    sa.Column('first_name', sa.String(length=256), nullable=True),
    sa.Column('last_name', sa.String(length=256), nullable=True),
    sa.Column('username', sa.String(length=256), nullable=False),
    sa.Column('password', sa.String(length=60), nullable=False),
    sa.Column('email_address', sa.String(length=320), nullable=True),
    sa.Column('phone_number', sa.String(length=16), nullable=True),
    sa.Column('last_login', sa.TIMESTAMP(), nullable=True),
    sa.Column('login_attempts', sa.BigInteger(), nullable=False),
    sa.Column('gender', sa.Enum('female', 'male', 'other', name='gender'), nullable=True),
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('public_key', sa.String(length=36), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('verified_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('modified_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email_address'),
    sa.UniqueConstraint('phone_number'),
    sa.UniqueConstraint('username')
    )
    op.create_index(op.f('ix_user_users_public_key'), 'user_users', ['public_key'], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_user_users_public_key'), table_name='user_users')
    op.drop_table('user_users')
    # ### end Alembic commands ###
